apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chatwoot-ingress
  namespace: chatwoot
  labels:
    app.kubernetes.io/name: chatwoot
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
    appgw.ingress.kubernetes.io/cookie-based-affinity: "true"
    appgw.ingress.kubernetes.io/request-timeout: "60"
    appgw.ingress.kubernetes.io/use-private-ip: "false"
    # SSL certificate from Key Vault
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "chatwoot-ssl-cert"
    # Health check configuration
    appgw.ingress.kubernetes.io/health-probe-path: "/health"
    appgw.ingress.kubernetes.io/health-probe-status-codes: "200-399"
    appgw.ingress.kubernetes.io/health-probe-interval: "30"
    appgw.ingress.kubernetes.io/health-probe-timeout: "5"
    appgw.ingress.kubernetes.io/health-probe-unhealthy-threshold: "3"
    # WAF protection
    appgw.ingress.kubernetes.io/waf-policy-for-path: "/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/chatwoot-waf-policy"
spec:
  tls:
  - hosts:
    - chatwoot.yourcompany.com
    secretName: chatwoot-tls
  rules:
  - host: chatwoot.yourcompany.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chatwoot-web-service
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: chatwoot-tls
  namespace: chatwoot
  labels:
    azure.workload.identity/use: "true"
  annotations:
    secrets-store.csi.x-k8s.io/used: "true"
type: kubernetes.io/tls
data:
  # This will be populated by the CSI Secret Store driver from Key Vault
  tls.crt: ""
  tls.key: ""